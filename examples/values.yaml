# vim: set ft=yaml:
# yaml-language-server: $schema=values.schema.json

# This is an example values.yaml file, it aims to show how to annotate the keys, and it's its only purpose. 
# The corresponding values.schema.json has been generated with the below command.
# helm-schema -n -k additionalProperties

# @schema
# additionalProperties: true
# @schema
service:
  
  # Type will be parsed as boolean
  enabled: true

  # @schema
  # type: integer
  # minimum: 80
  # maximum: 89
  # @schema
  port: 80

  # @schema
  # enum: [443, 80]
  # @schema
  externalIP: 443
  
  # @schema
  # type: integer
  # examples: [443, 80]
  # @schema
  otherExternalIP: 443

  # @schema
  # description: Name of the deployed service. Defined in the schema annotation
  # anyOf:
  #   - type: null
  #   - pattern: ^foo-
  # @schema
  # This comment will not be parsed as 'description', the 'description' field take precedence over comments
  name: 
    
  # @schema
  # properties:
  #   CONFIG_PATH:
  #     title: CONFIG_PATH
  #     type: string
  #     description: The local path to the service configuration file
  #     examples: [/path/to/config]
  #   ADMIN_EMAIL:
  #     title: ADMIN_EMAIL
  #     type: string
  #     format: idn-email
  #     examples: [admin@example.org]
  #   API_URL:
  #     title: API_URL
  #     type: string
  #     format: idn-hostname
  #     examples: [https://api.example.org]
  # @schema
  # -- Environment variables. If you want to provide auto-completion to the user 
  env: {}

  # @schema
  # type: object
  # patternProperties:
  #   "^API_.*":
  #     type: string
  #     pattern: ^api-key
  #   "^EMAIL_.*":
  #     type: string
  #     format: idn-email
  # examples: ["API_PROVIDER_ONE: api-key-x","EMAIL_ADMIN: admin@example.org"]
  # @schema
  conf: {}

  # @schema
  # format: idn-email
  # examples: [name@domain.tld]
  # @schema
  contact: ""

  # @schema
  # type: boolean
  # default: true
  # @schema
  telemetry: true

  # @schema
  # type: array
  # items:
  #   type: object
  #   properties:
  #     host:
  #       type: object
  #       properties:
  #         url:
  #           type: string
  #           format: idn-hostname
  # @schema
  # Will give auto-completion for the below structure 
  # hosts: 
  #  - name:
  #      url: my.example.org
  hosts: []

  # @schema
  # enum:
  # - application
  # - controller
  # - api
  # @schema
  type: application

  # @schema
  # const: maintainer@example.org
  # @schema
  maintainer: maintainer@example.org

  # @schema
  # type: string
  # pattern: ^[1-9][0-9]*Gib$
  # examples: ["5Gib","10Gib","20Gib"]
  # @schema
  storage: "10Gib"